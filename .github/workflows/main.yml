name: Deploy Go HTMX App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"
      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image
        run: |
          docker tag myapp:latest myusername/myapp:latest
          docker push myusername/myapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Deploy to Alpine VM
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          EDGEDB_INSTANCE: ${{ secrets.EDGEDB_INSTANCE }}
          EDGEDB_SECRET_KEY: ${{ secrets.EDGEDB_SECRET_KEY }}

        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_HOST" > ~/.ssh/known_hosts
          ssh-keyscan "$SSH_HOST" >> ~/.ssh/known_hosts
          ssh $SSH_USER@$SSH_HOST << 'EOF'
            docker pull myusername/myapp:latest
            docker stop myapp || true
            docker rm myapp || true
            docker run -d --name myapp -p 80:80 \
              -e DATABASE_URL=$DATABASE_URL \
              myusername/myapp:latest
            export EDGEDB_INSTANCE="$EDGEDB_INSTANCE"
            export EDGEDB_SECRET_KEY="$EDGEDB_SECRET_KEY"
            export GO_ENV=production
            export PORT=80
            echo "$EDGEDB_SECRET_KEY" | cloudflared tunnel --config /etc/cloudflared/config.yml run <TUNNEL_UUID>
